#!/usr/bin/env bash

## Copyright (C) 2020-2023 Aditya Shakya <adi1090x@gmail.com>
## Modified by Panther-14 (Github)

# Import Current Theme
DIR="$HOME/.config/hypr"
RASI="$DIR/assets/themes/applets.rasi"

SCREEN="$HOME/Imágenes/Screenshots"

# Theme Elements
prompt='Screenshot'
mesg="Directory :: $SCREEN"

# Options
option_1="󰹑"
option_2=""
option_3=""
option_4="5s"
option_5="10"

# Rofi CMD
rofi_cmd() {
	rofi -dmenu \
		-p "$prompt" \
		-mesg "$mesg" \
		-markup-rows \
		-theme ${RASI}
}

# Pass variables to rofi dmenu
run_rofi() {
	echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$option_5" | rofi_cmd
}

# Screenshot
time=`date +%Y-%m-%d-%H-%M-%S`
dir="$SCREEN"
file="Screenshot_${time}.png"

# Directory
if [[ ! -d "$dir" ]]; then
	mkdir -p "$dir"
fi

# notify and view screenshot
iDIR="$HOME/.config/hypr/assets/icons"
notify_view() {
	notify_cmd_shot="notify-send -h string:x-canonical-private-synchronous:sys-notify-shot -u low -i ${iDIR}/picture.png --app-name="Screenshot""
	${notify_cmd_shot} "Copied to clipboard."
	paplay /usr/share/sounds/freedesktop/stereo/screen-capture.oga &>/dev/null &
	viewnior ${dir}/"$file"
	if [[ -e "$dir/$file" ]]; then
		${notify_cmd_shot} "Screenshot Saved."
	else
		${notify_cmd_shot} "Screenshot Deleted."
	fi
}

# countdown
countdown () {
	for sec in `seq $1 -1 1`; do
		notify-send -h string:x-canonical-private-synchronous:sys-notify-count -t 800 -i "$iDIR"/timer.png --app-name="Screenshot" "Taking shot in : $sec"
		sleep 1
	done
}

# take shots
shotnow () {
	sleep 0.5
	cd ${dir} && hyprshot -m active -m output -o "$SCREEN" -f "$file" -z | tee "$file" | wl-copy
	notify_view
}

shot5 () {
	countdown '5'
	cd ${dir} && hyprshot -m active -m output -o "$SCREEN" -f "$file" -z | tee "$file" | wl-copy
	notify_view
}

shot10 () {
	countdown '10'
	cd ${dir} && hyprshot -m active -m output -o "$SCREEN" -f "$file" -z | tee "$file" | wl-copy
	notify_view
}

shotwin () {
	sleep 0.5
	cd ${dir} && hyprshot -m window -o "$SCREEN" -f "$file" -z | tee "$file" | wl-copy
	notify_view
}

shotarea () {
	sleep 0.5
	cd ${dir} && hyprshot -m region -o "$SCREEN" -f "$file" -z | tee "$file" | wl-copy
	notify_view
}

# Execute Command
run_cmd() {
	# Actions
	chosen="$(run_rofi)"
	case ${chosen} in
		$option_1)
			shotnow
			;;
		$option_2)
			shotarea
			;;
		$option_3)
			shotwin
			;;
		$option_4)
			shot5
			;;
		$option_5)
			shot10
			;;
	esac
}

run_cmd

exit 0